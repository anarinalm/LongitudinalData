[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Longitudinal Tutorial",
    "section": "",
    "text": "Welcome\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2\n\n\nclustered data"
  },
  {
    "objectID": "Longi_EDA.html#long-and-wide-format",
    "href": "Longi_EDA.html#long-and-wide-format",
    "title": "1  Exploratory Data Analysis",
    "section": "1.1 Long and wide format",
    "text": "1.1 Long and wide format"
  },
  {
    "objectID": "Longi_GEE.html#package",
    "href": "Longi_GEE.html#package",
    "title": "2  Marginal Model (GEE)",
    "section": "2.1 Package",
    "text": "2.1 Package"
  },
  {
    "objectID": "Longi_modelselection.html#backward-forward-stepwise-model-selection",
    "href": "Longi_modelselection.html#backward-forward-stepwise-model-selection",
    "title": "6  Model Selection",
    "section": "6.1 Backward, Forward, Stepwise Model Selection",
    "text": "6.1 Backward, Forward, Stepwise Model Selection"
  },
  {
    "objectID": "Longi_interpretation.html#intercept",
    "href": "Longi_interpretation.html#intercept",
    "title": "8  Interpretation",
    "section": "8.1 Intercept",
    "text": "8.1 Intercept"
  },
  {
    "objectID": "Longi_noncontinuous.html#binary-outcome",
    "href": "Longi_noncontinuous.html#binary-outcome",
    "title": "9  Models for Non-Continuous Outcomes (Longitudinal)",
    "section": "9.1 Binary Outcome",
    "text": "9.1 Binary Outcome"
  },
  {
    "objectID": "Longi_noncontinuous.html#count-outcome",
    "href": "Longi_noncontinuous.html#count-outcome",
    "title": "9  Models for Non-Continuous Outcomes (Longitudinal)",
    "section": "9.2 Count Outcome",
    "text": "9.2 Count Outcome"
  },
  {
    "objectID": "Multi_EDA.html#visualization",
    "href": "Multi_EDA.html#visualization",
    "title": "12  Exploratory Data Analysis",
    "section": "12.1 Visualization",
    "text": "12.1 Visualization"
  },
  {
    "objectID": "Multi_noncontinuous.html#binary-outcome",
    "href": "Multi_noncontinuous.html#binary-outcome",
    "title": "19  Models for Non-Continuous Outcomes (Multilevel)",
    "section": "19.1 Binary Outcome",
    "text": "19.1 Binary Outcome"
  },
  {
    "objectID": "Multi_noncontinuous.html#count-outcome",
    "href": "Multi_noncontinuous.html#count-outcome",
    "title": "19  Models for Non-Continuous Outcomes (Multilevel)",
    "section": "19.2 Count Outcome",
    "text": "19.2 Count Outcome"
  },
  {
    "objectID": "Longi_intro.html#data-structure",
    "href": "Longi_intro.html#data-structure",
    "title": "Longitudinal Data Analysis",
    "section": "Data Structure",
    "text": "Data Structure\n\nsuppressPackageStartupMessages(library(tidyr))\nsuppressPackageStartupMessages(library(data.table))\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(haven))\n\nThe most important part of any statistical analysis begins with loading the data into Rstudio. Data can come in many forms with two popular ones being csv (comma separated values) and dta. Below we show different methods for how to load the data into RStudio.\n\nLoading CSV files\n\nUsing base R\nThe following method is a pretty standard way of loading csv files into R. It requires no external packages (this is already a base R function) and works as follows. First, specify the location of your data, and put it into function as an input.\n\nTLC &lt;- read.csv(\"Data/TLC.csv\")\n\nWe can then get a look at the data by using the head function which provides us with a sneak peek of the first n rows.\n\nhead(TLC, n = 10)\n\n   id lead0 lead1 lead4 lead6     group\n1   1  30.8  26.9  25.8  23.8   Placebo\n2   2  26.5  14.8  19.5  21.0 Treatment\n3   3  25.8  23.0  19.1  23.2 Treatment\n4   4  24.7  24.5  22.0  22.5   Placebo\n5   5  20.4   2.8   3.2   9.4 Treatment\n6   6  20.4   5.4   4.5  11.9 Treatment\n7   7  28.6  20.8  19.2  18.4   Placebo\n8   8  33.7  31.6  28.5  25.1   Placebo\n9   9  19.7  14.9  15.3  14.7   Placebo\n10 10  31.1  31.2  29.2  30.1   Placebo\n\n\n\n\nUsing the readr package\nThe next method requires the use of the readr package. It works exactly the same as read.csv, save for the fact that it is faster than read.csv.\n\nlibrary(readr)\nTLC &lt;- read_csv(\"Data/TLC.csv\")\n\nWe can also print the first few rows to take a look of our data using function head, here we print the first 10 rows of the data.\n\nhead(TLC, n = 10)\n\n# A tibble: 10 × 6\n      id lead0 lead1 lead4 lead6 group    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    \n 1     1  30.8 26.9   25.8 23.8  Placebo  \n 2     2  26.5 14.8   19.5 21    Treatment\n 3     3  25.8 23     19.1 23.2  Treatment\n 4     4  24.7 24.5   22   22.5  Placebo  \n 5     5  20.4  2.8    3.2  9.40 Treatment\n 6     6  20.4  5.40   4.5 11.9  Treatment\n 7     7  28.6 20.8   19.2 18.4  Placebo  \n 8     8  33.7 31.6   28.5 25.1  Placebo  \n 9     9  19.7 14.9   15.3 14.7  Placebo  \n10    10  31.1 31.2   29.2 30.1  Placebo  \n\n\n\n\nUsing the data.table package\nIf we have large datasets, we can use the fread function in the data.table package to read the data faster compared to the other methods above, and we print the first 5 rows of the data.\n\nlibrary(data.table)\nTLC &lt;- fread(\"Data/TLC.csv\")\nhead(TLC, n = 5)\n\n      id lead0 lead1 lead4 lead6     group\n   &lt;int&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;    &lt;char&gt;\n1:     1  30.8  26.9  25.8  23.8   Placebo\n2:     2  26.5  14.8  19.5  21.0 Treatment\n3:     3  25.8  23.0  19.1  23.2 Treatment\n4:     4  24.7  24.5  22.0  22.5   Placebo\n5:     5  20.4   2.8   3.2   9.4 Treatment\n\n\n\n\n\nLoading dta files\nWe can also read files in other formats from other software (STATA, SPSS, SAS, etc). Here we will explore reading dta files which is used in STATA software. In order to load these into Rstudio we need to use a package known as haven. The haven package has a function known as read_dta() which serves a similar purpose as read.csv(), read_csv() and fread().\n\nTLCdta &lt;- read_dta(\"Data/TLC.dta\")\nhead(TLCdta, n = 15)\n\n# A tibble: 15 × 6\n      id lead0 lead1 lead4 lead6 group    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    \n 1     1  30.8 26.9  25.8  23.8  Placebo  \n 2     2  26.5 14.8  19.5  21    Treatment\n 3     3  25.8 23    19.1  23.2  Treatment\n 4     4  24.7 24.5  22    22.5  Placebo  \n 5     5  20.4  2.80  3.20  9.40 Treatment\n 6     6  20.4  5.40  4.5  11.9  Treatment\n 7     7  28.6 20.8  19.2  18.4  Placebo  \n 8     8  33.7 31.6  28.5  25.1  Placebo  \n 9     9  19.7 14.9  15.3  14.7  Placebo  \n10    10  31.1 31.2  29.2  30.1  Placebo  \n11    11  19.8 17.5  20.5  27.5  Placebo  \n12    12  24.8 23.1  24.6  30.9  Treatment\n13    13  21.4 26.3  19.5  19    Placebo  \n14    14  27.9  6.30 18.5  16.3  Treatment\n15    15  21.1 20.3  18.4  20.8  Placebo"
  },
  {
    "objectID": "Longi_intro.html#converting-between-data-formats-wide-and-long-format",
    "href": "Longi_intro.html#converting-between-data-formats-wide-and-long-format",
    "title": "Longitudinal Data Analysis",
    "section": "Converting between data formats (wide and long format)",
    "text": "Converting between data formats (wide and long format)\nFor the most part there are two formats that your data can come in. The wide format and the long format. The long format is when patients within the data have more than one observation. In other words, each row is snapshot into a subject’s history at a specific time point. In the case of our data, each subject has four observations corresponding to their four lead measurements (initial measurement, 1 week measurement, 4 week measurement, and 6 week measurement). The code below details how to convert from wide format to long format.\nThe arguments to gather():\n\ndata: Data object (e.g. the data object here is TLC).\nkey: Name of new key column (made from names of data columns).\nvalue: Name of new value column.\n...: Names of source columns that contain values.\nfactor_key: Treat the new key column as a factor (instead of character vector).\n\nThen, we print the first 16 rows of the long format TLC data.\n\nlong_TLC &lt;- tidyr::gather(TLC, level, measurements, lead0:lead6, factor_key = TRUE)\nlong_TLC &lt;- long_TLC[order(long_TLC$id), ]\nhead(long_TLC, n = 16)\n\n    id     group level measurements\n1    1   Placebo lead0         30.8\n101  1   Placebo lead1         26.9\n201  1   Placebo lead4         25.8\n301  1   Placebo lead6         23.8\n2    2 Treatment lead0         26.5\n102  2 Treatment lead1         14.8\n202  2 Treatment lead4         19.5\n302  2 Treatment lead6         21.0\n3    3 Treatment lead0         25.8\n103  3 Treatment lead1         23.0\n203  3 Treatment lead4         19.1\n303  3 Treatment lead6         23.2\n4    4   Placebo lead0         24.7\n104  4   Placebo lead1         24.5\n204  4   Placebo lead4         22.0\n304  4   Placebo lead6         22.5\n\n\nThe wide format is when each row corresponds to a unique subject. The below shows one how to convert from long format to wide.\nThe arguments to spread():\n\ndata: Data object.\nkey: Name of column containing the new column names.\nvalue: Name of column containing values.\n\nThen, we print the first 10 rows of the converted wide format TLC data which should be same as our original data.\n\nwide_TLC &lt;- spread(long_TLC, level, measurements)\nhead(wide_TLC, n = 10)\n\n   id     group lead0 lead1 lead4 lead6\n1   1   Placebo  30.8  26.9  25.8  23.8\n2   2 Treatment  26.5  14.8  19.5  21.0\n3   3 Treatment  25.8  23.0  19.1  23.2\n4   4   Placebo  24.7  24.5  22.0  22.5\n5   5 Treatment  20.4   2.8   3.2   9.4\n6   6 Treatment  20.4   5.4   4.5  11.9\n7   7   Placebo  28.6  20.8  19.2  18.4\n8   8   Placebo  33.7  31.6  28.5  25.1\n9   9   Placebo  19.7  14.9  15.3  14.7\n10 10   Placebo  31.1  31.2  29.2  30.1"
  }
]